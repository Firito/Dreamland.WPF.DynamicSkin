<Application x:Class="Dreamland.WPF.DynamicSkin.Demo.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <!-- ============================================ -->
        <!-- Converters -->
        <!-- ============================================ -->
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />

        <!-- ============================================ -->
        <!-- 颜色定义 -->
        <!-- ============================================ -->

        <!-- 默认颜色 -->
        <Color x:Key="PrimaryColor">#FF0078D7</Color>
        <Color x:Key="SecondaryColor">#FF005A9E</Color>
        <Color x:Key="BackgroundColor">#FFFFFFFF</Color>
        <Color x:Key="ForegroundColor">#FF000000</Color>
        <Color x:Key="BorderColor">#FFCCCCCC</Color>

        <!-- Dark 主题颜色 -->
        <Color x:Key="PrimaryColor.Dark">#FF0078D7</Color>
        <Color x:Key="SecondaryColor.Dark">#FF005A9E</Color>
        <Color x:Key="BackgroundColor.Dark">#FF1E1E1E</Color>
        <Color x:Key="ForegroundColor.Dark">#FFFFFFFF</Color>
        <Color x:Key="BorderColor.Dark">#FF3F3F3F</Color>

        <!-- Light 主题颜色 -->
        <Color x:Key="PrimaryColor.Light">#FF0078D7</Color>
        <Color x:Key="SecondaryColor.Light">#FF00A4EF</Color>
        <Color x:Key="BackgroundColor.Light">#FFF5F5F5</Color>
        <Color x:Key="ForegroundColor.Light">#FF000000</Color>
        <Color x:Key="BorderColor.Light">#FFE0E0E0</Color>

        <!-- Blue 主题颜色 -->
        <Color x:Key="PrimaryColor.Blue">#FF1E90FF</Color>
        <Color x:Key="SecondaryColor.Blue">#FF4169E1</Color>
        <Color x:Key="BackgroundColor.Blue">#FFF0F8FF</Color>
        <Color x:Key="ForegroundColor.Blue">#FF000080</Color>
        <Color x:Key="BorderColor.Blue">#FFB0C4DE</Color>

        <!-- ============================================ -->
        <!-- 画刷定义 -->
        <!-- ============================================ -->

        <!-- 默认画刷 -->
        <SolidColorBrush x:Key="PrimaryBrush" Color="{StaticResource PrimaryColor}" />
        <SolidColorBrush x:Key="SecondaryBrush" Color="{StaticResource SecondaryColor}" />
        <SolidColorBrush x:Key="BackgroundBrush" Color="{StaticResource BackgroundColor}" />
        <SolidColorBrush x:Key="ForegroundBrush" Color="{StaticResource ForegroundColor}" />
        <SolidColorBrush x:Key="BorderBrush" Color="{StaticResource BorderColor}" />

        <!-- Dark 主题画刷 -->
        <SolidColorBrush x:Key="PrimaryBrush.Dark" Color="{StaticResource PrimaryColor.Dark}" />
        <SolidColorBrush x:Key="SecondaryBrush.Dark" Color="{StaticResource SecondaryColor.Dark}" />
        <SolidColorBrush x:Key="BackgroundBrush.Dark" Color="{StaticResource BackgroundColor.Dark}" />
        <SolidColorBrush x:Key="ForegroundBrush.Dark" Color="{StaticResource ForegroundColor.Dark}" />
        <SolidColorBrush x:Key="BorderBrush.Dark" Color="{StaticResource BorderColor.Dark}" />

        <!-- Light 主题画刷 -->
        <SolidColorBrush x:Key="PrimaryBrush.Light" Color="{StaticResource PrimaryColor.Light}" />
        <SolidColorBrush x:Key="SecondaryBrush.Light" Color="{StaticResource SecondaryColor.Light}" />
        <SolidColorBrush x:Key="BackgroundBrush.Light" Color="{StaticResource BackgroundColor.Light}" />
        <SolidColorBrush x:Key="ForegroundBrush.Light" Color="{StaticResource ForegroundColor.Light}" />
        <SolidColorBrush x:Key="BorderBrush.Light" Color="{StaticResource BorderColor.Light}" />

        <!-- Blue 主题画刷 -->
        <SolidColorBrush x:Key="PrimaryBrush.Blue" Color="{StaticResource PrimaryColor.Blue}" />
        <SolidColorBrush x:Key="SecondaryBrush.Blue" Color="{StaticResource SecondaryColor.Blue}" />
        <SolidColorBrush x:Key="BackgroundBrush.Blue" Color="{StaticResource BackgroundColor.Blue}" />
        <SolidColorBrush x:Key="ForegroundBrush.Blue" Color="{StaticResource ForegroundColor.Blue}" />
        <SolidColorBrush x:Key="BorderBrush.Blue" Color="{StaticResource BorderColor.Blue}" />

        <!-- ============================================ -->
        <!-- 通用样式 -->
        <!-- ============================================ -->

        <!-- 卡片边框样式 -->
        <Style x:Key="CardBorderStyle" TargetType="Border">
            <Setter Property="Margin" Value="10" />
            <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="CornerRadius" Value="8" />
            <Setter Property="Padding" Value="15" />
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect BlurRadius="10" Opacity="0.2" ShadowDepth="2" />
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CardBorderStyle.Dark" BasedOn="{StaticResource CardBorderStyle}" TargetType="Border">
            <Setter Property="Background" Value="{StaticResource BackgroundBrush.Dark}" />
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush.Dark}" />
        </Style>

        <Style x:Key="CardBorderStyle.Light" BasedOn="{StaticResource CardBorderStyle}" TargetType="Border">
            <Setter Property="Background" Value="{StaticResource BackgroundBrush.Light}" />
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush.Light}" />
        </Style>

        <Style x:Key="CardBorderStyle.Blue" BasedOn="{StaticResource CardBorderStyle}" TargetType="Border">
            <Setter Property="Background" Value="{StaticResource BackgroundBrush.Blue}" />
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush.Blue}" />
        </Style>

        <!-- 主按钮样式 -->
        <Style x:Key="PrimaryButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource PrimaryBrush}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="FontWeight" Value="Medium" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Padding" Value="20,8" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="6">
                            <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.8" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Opacity" Value="0.6" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.4" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="PrimaryButtonStyle.Dark" BasedOn="{StaticResource PrimaryButtonStyle}" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource PrimaryBrush.Dark}" />
        </Style>

        <Style x:Key="PrimaryButtonStyle.Light" BasedOn="{StaticResource PrimaryButtonStyle}" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource PrimaryBrush.Light}" />
        </Style>

        <Style x:Key="PrimaryButtonStyle.Blue" BasedOn="{StaticResource PrimaryButtonStyle}" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource PrimaryBrush.Blue}" />
        </Style>

        <!-- 次要按钮样式 -->
        <Style x:Key="SecondaryButtonStyle" BasedOn="{StaticResource PrimaryButtonStyle}" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource SecondaryBrush}" />
        </Style>

        <Style x:Key="SecondaryButtonStyle.Dark" BasedOn="{StaticResource SecondaryButtonStyle}" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource SecondaryBrush.Dark}" />
        </Style>

        <Style x:Key="SecondaryButtonStyle.Light" BasedOn="{StaticResource SecondaryButtonStyle}" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource SecondaryBrush.Light}" />
        </Style>

        <Style x:Key="SecondaryButtonStyle.Blue" BasedOn="{StaticResource SecondaryButtonStyle}" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource SecondaryBrush.Blue}" />
        </Style>

        <!-- 窗口样式 -->
        <Style x:Key="MainWindowStyle" TargetType="Window">
            <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        </Style>

        <Style x:Key="MainWindowStyle.Dark" BasedOn="{StaticResource MainWindowStyle}" TargetType="Window">
            <Setter Property="Background" Value="{StaticResource BackgroundBrush.Dark}" />
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Dark}" />
        </Style>

        <Style x:Key="MainWindowStyle.Light" BasedOn="{StaticResource MainWindowStyle}" TargetType="Window">
            <Setter Property="Background" Value="{StaticResource BackgroundBrush.Light}" />
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Light}" />
        </Style>

        <Style x:Key="MainWindowStyle.Blue" BasedOn="{StaticResource MainWindowStyle}" TargetType="Window">
            <Setter Property="Background" Value="{StaticResource BackgroundBrush.Blue}" />
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Blue}" />
        </Style>

        <!-- 标题文本样式 -->
        <Style x:Key="TitleTextStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="28" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}" />
        </Style>

        <Style x:Key="TitleTextStyle.Dark" BasedOn="{StaticResource TitleTextStyle}" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource PrimaryBrush.Dark}" />
        </Style>

        <Style x:Key="TitleTextStyle.Light" BasedOn="{StaticResource TitleTextStyle}" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource PrimaryBrush.Light}" />
        </Style>

        <Style x:Key="TitleTextStyle.Blue" BasedOn="{StaticResource TitleTextStyle}" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource PrimaryBrush.Blue}" />
        </Style>

        <!-- ============================================ -->
        <!-- TextBox 样式 -->
        <!-- ============================================ -->

        <!-- TextBox 基础样式 -->
        <Style x:Key="TextBoxStyle" TargetType="TextBox">
            <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
            <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Padding" Value="8,5" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Name="Border" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
                            <ScrollViewer x:Name="PART_ContentHost" 
                                          Margin="{TemplateBinding Padding}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" 
                                        Value="{StaticResource PrimaryBrush}" />
                                <Setter TargetName="Border" Property="Opacity" Value="0.9" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" 
                                        Value="{StaticResource PrimaryBrush}" />
                                <Setter TargetName="Border" Property="BorderThickness" Value="2" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TextBoxStyle.Dark" BasedOn="{StaticResource TextBoxStyle}" TargetType="TextBox">
            <Setter Property="Background" Value="{StaticResource BackgroundBrush.Dark}" />
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Dark}" />
            <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush.Dark}" />
        </Style>

        <Style x:Key="TextBoxStyle.Light" BasedOn="{StaticResource TextBoxStyle}" TargetType="TextBox">
            <Setter Property="Background" Value="{StaticResource BackgroundBrush.Light}" />
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Light}" />
            <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush.Light}" />
        </Style>

        <Style x:Key="TextBoxStyle.Blue" BasedOn="{StaticResource TextBoxStyle}" TargetType="TextBox">
            <Setter Property="Background" Value="{StaticResource BackgroundBrush.Blue}" />
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Blue}" />
            <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush.Blue}" />
        </Style>

        <!-- ============================================ -->
        <!-- ComboBox 样式 -->
        <!-- ============================================ -->

        <!-- ComboBox 基础样式 -->
        <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Padding" Value="8,5" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton"
                                          Focusable="false"
                                          IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border Name="Border"
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                CornerRadius="4">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition />
                                                    <ColumnDefinition Width="20" />
                                                </Grid.ColumnDefinitions>
                                                <Path Grid.Column="1"
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"
                                                      Data="M 0 0 L 4 4 L 8 0 Z"
                                                      Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType=ComboBox}}" />
                                            </Grid>
                                        </Border>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                                <ToggleButton.Background>
                                    <Binding Path="Background" RelativeSource="{RelativeSource TemplatedParent}" />
                                </ToggleButton.Background>
                                <ToggleButton.BorderBrush>
                                    <Binding Path="BorderBrush" RelativeSource="{RelativeSource TemplatedParent}" />
                                </ToggleButton.BorderBrush>
                                <ToggleButton.BorderThickness>
                                    <Binding Path="BorderThickness" RelativeSource="{RelativeSource TemplatedParent}" />
                                </ToggleButton.BorderThickness>
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite"
                                              IsHitTestVisible="False"
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              Margin="8,3,23,3"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left" />
                            <Popup Name="Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   PopupAnimation="Slide">
                                <Grid Name="DropDown"
                                      SnapsToDevicePixels="True"
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border Name="DropDownBorder"
                                            Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"
                                            BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                                            BorderThickness="1"
                                            CornerRadius="4"
                                            Margin="0,1,0,0">
                                        <Border.Effect>
                                            <DropShadowEffect BlurRadius="8" Opacity="0.3" ShadowDepth="2" />
                                        </Border.Effect>
                                    </Border>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ComboBoxStyle.Dark" BasedOn="{StaticResource ComboBoxStyle}" TargetType="ComboBox">
            <Setter Property="Background" Value="{StaticResource BackgroundBrush.Dark}" />
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Dark}" />
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush.Dark}" />
        </Style>

        <Style x:Key="ComboBoxStyle.Light" BasedOn="{StaticResource ComboBoxStyle}" TargetType="ComboBox">
            <Setter Property="Background" Value="{StaticResource BackgroundBrush.Light}" />
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Light}" />
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush.Light}" />
        </Style>

        <Style x:Key="ComboBoxStyle.Blue" BasedOn="{StaticResource ComboBoxStyle}" TargetType="ComboBox">
            <Setter Property="Background" Value="{StaticResource BackgroundBrush.Blue}" />
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Blue}" />
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush.Blue}" />
        </Style>

        <!-- ============================================ -->
        <!-- TabControl 和 TabItem 样式 -->
        <!-- ============================================ -->

        <!-- TabControl 样式 -->
        <Style x:Key="TabControlStyle" TargetType="TabControl">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
        </Style>

        <Style x:Key="TabControlStyle.Dark" BasedOn="{StaticResource TabControlStyle}" TargetType="TabControl">
            <Setter Property="Background" Value="Transparent" />
        </Style>

        <Style x:Key="TabControlStyle.Light" BasedOn="{StaticResource TabControlStyle}" TargetType="TabControl">
            <Setter Property="Background" Value="Transparent" />
        </Style>

        <Style x:Key="TabControlStyle.Blue" BasedOn="{StaticResource TabControlStyle}" TargetType="TabControl">
            <Setter Property="Background" Value="Transparent" />
        </Style>

        <!-- TabItem 样式 -->
        <Style x:Key="TabItemStyle" TargetType="TabItem">
            <Setter Property="FontSize" Value="13" />
            <Setter Property="FontWeight" Value="Medium" />
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0,0,0,2" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Padding" Value="16,8" />
            <Setter Property="Margin" Value="0,0,8,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border Name="Border" Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center"
                                              HorizontalAlignment="Center"
                                              ContentSource="Header" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" 
                                        Value="{StaticResource BackgroundBrush}" />
                                <Setter TargetName="Border" Property="BorderBrush" 
                                        Value="{StaticResource PrimaryBrush}" />
                                <Setter TargetName="Border" Property="Opacity" Value="0.7" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}" />
                                <Setter TargetName="Border" Property="BorderBrush" 
                                        Value="{StaticResource PrimaryBrush}" />
                                <Setter Property="FontWeight" Value="Bold" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TabItemStyle.Dark" BasedOn="{StaticResource TabItemStyle}" TargetType="TabItem">
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Dark}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border Name="Border" Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center"
                                              HorizontalAlignment="Center"
                                              ContentSource="Header" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" 
                                        Value="{StaticResource BackgroundBrush.Dark}" />
                                <Setter TargetName="Border" Property="BorderBrush" 
                                        Value="{StaticResource PrimaryBrush.Dark}" />
                                <Setter TargetName="Border" Property="Opacity" Value="0.7" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource PrimaryBrush.Dark}" />
                                <Setter TargetName="Border" Property="BorderBrush" 
                                        Value="{StaticResource PrimaryBrush.Dark}" />
                                <Setter Property="FontWeight" Value="Bold" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TabItemStyle.Light" BasedOn="{StaticResource TabItemStyle}" TargetType="TabItem">
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Light}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border Name="Border" Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center"
                                              HorizontalAlignment="Center"
                                              ContentSource="Header" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" 
                                        Value="{StaticResource BackgroundBrush.Light}" />
                                <Setter TargetName="Border" Property="BorderBrush" 
                                        Value="{StaticResource PrimaryBrush.Light}" />
                                <Setter TargetName="Border" Property="Opacity" Value="0.7" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource PrimaryBrush.Light}" />
                                <Setter TargetName="Border" Property="BorderBrush" 
                                        Value="{StaticResource PrimaryBrush.Light}" />
                                <Setter Property="FontWeight" Value="Bold" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TabItemStyle.Blue" BasedOn="{StaticResource TabItemStyle}" TargetType="TabItem">
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Blue}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border Name="Border" Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center"
                                              HorizontalAlignment="Center"
                                              ContentSource="Header" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" 
                                        Value="{StaticResource BackgroundBrush.Blue}" />
                                <Setter TargetName="Border" Property="BorderBrush" 
                                        Value="{StaticResource PrimaryBrush.Blue}" />
                                <Setter TargetName="Border" Property="Opacity" Value="0.7" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource PrimaryBrush.Blue}" />
                                <Setter TargetName="Border" Property="BorderBrush" 
                                        Value="{StaticResource PrimaryBrush.Blue}" />
                                <Setter Property="FontWeight" Value="Bold" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>